function out = model
%
% main.m
%
% Model exported on Jul 2 2016, 18:35 by COMSOL 5.2.0.220.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/home/zhetao/Research/Array_absorption_git');

model.label('optimization.mph');

model.comments(['Optimization\n\nOptimization\n\nOptimization\n\nOptimization\n\nOptimization\n\nMy normal absorption\n\n']);

model.param.set('d', '0.012148');
model.param.set('D', '0.04');
model.param.set('d_nr_max', '3.3890625');
model.param.set('freq0', '3000[Hz]');
model.param.set('freq1', '3000[Hz]');
model.param.set('int_H', '0.5*freq0/freq1');
model.param.set('int_W', 'period*nop');
model.param.set('lambda', '343[m]/freq1');
model.param.set('loss', '0.1');
model.param.set('loss_a', '0.00');
model.param.set('nop', 'floor(20*freq0/freq1)');
model.param.set('period', 'd*ninperiod');
model.param.set('PMLH', '0.1[m/s]*freq0/freq1');
model.param.set('R', '1.2148*freq0/freq1');
model.param.set('sigma', '0.3[m/s]*freq0/freq1');
model.param.set('theta_i', '0*pi/180');
model.param.set('W', '2*R');
model.param.set('ninperiod', '8');
model.param.set('k', '3/7');
model.param.set('b', '4/7');
model.param.set('c1', '0');
model.param.set('c2', '0');
model.param.set('c3', '0');
model.param.set('c4', '0');

model.modelNode.create('comp1');

model.geom.create('geom1', 2);

model.modelNode.create('comp2');

model.geom.create('geom2', 2);

model.modelNode('comp1').defineLocalCoord(false);
model.modelNode('comp2').defineLocalCoord(false);

model.func.create('an2', 'Analytic');
model.func('an2').model('comp1');
model.func('an2').label('Refractive index function');
model.func('an2').set('expr', 'k*x+b+c1*sin(pi/7*(x-1))+c2*sin(2*pi/7*(x-1))+c3*sin(3*pi/7*(x-1))+c4*sin(4*pi/7*(x-1))');
model.func('an2').set('plotargs', {'x' '0' '8'});
model.func('an2').set('funcname', 'nr');

model.mesh.create('mesh3', 'geom1');
model.mesh.create('mesh4', 'geom2');

model.geom('geom1').selection.create('csel12', 'CumulativeSelection');
model.geom('geom1').selection('csel12').label('arr8');
model.geom('geom1').selection.create('csel7', 'CumulativeSelection');
model.geom('geom1').selection('csel7').label('arr4');
model.geom('geom1').selection.create('csel8', 'CumulativeSelection');
model.geom('geom1').selection('csel8').label('arr1');
model.geom('geom1').selection.create('csel9', 'CumulativeSelection');
model.geom('geom1').selection('csel9').label('arr5');
model.geom('geom1').selection.create('csel1', 'CumulativeSelection');
model.geom('geom1').selection('csel1').label('PML');
model.geom('geom1').selection.create('csel2', 'CumulativeSelection');
model.geom('geom1').selection('csel2').label('metasurface region');
model.geom('geom1').selection.create('csel3', 'CumulativeSelection');
model.geom('geom1').selection('csel3').label('air');
model.geom('geom1').selection.create('csel4', 'CumulativeSelection');
model.geom('geom1').selection('csel4').label('1');
model.geom('geom1').selection.create('csel5', 'CumulativeSelection');
model.geom('geom1').selection('csel5').label('arr2');
model.geom('geom1').selection.create('csel6', 'CumulativeSelection');
model.geom('geom1').selection('csel6').label('arr3');
model.geom('geom1').selection.create('csel10', 'CumulativeSelection');
model.geom('geom1').selection('csel10').label('arr6');
model.geom('geom1').selection.create('csel11', 'CumulativeSelection');
model.geom('geom1').selection('csel11').label('arr7');
model.geom('geom1').create('c1', 'Circle');
model.geom('geom1').feature('c1').set('pos', {'0' '0'});
model.geom('geom1').feature('c1').set('r', 'R');
model.geom('geom1').feature('c1').set('contributeto', 'csel3');
model.geom('geom1').feature('c1').set('angle', '180');
model.geom('geom1').create('r2', 'Rectangle');
model.geom('geom1').feature('r2').set('size', {'int_W' 'int_H'});
model.geom('geom1').feature('r2').set('contributeto', 'csel2');
model.geom('geom1').feature('r2').set('pos', {'-0.5*int_W' '0'});
model.geom('geom1').create('r4', 'Rectangle');
model.geom('geom1').feature('r4').set('size', {'d' 'D'});
model.geom('geom1').feature('r4').set('pos', {'-period*nop/2' '0'});
model.geom('geom1').create('arr2', 'Array');
model.geom('geom1').feature('arr2').label('Array 1');
model.geom('geom1').feature('arr2').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr2').set('selresult', 'on');
model.geom('geom1').feature('arr2').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr2').selection('input').set({'r4'});
model.geom('geom1').create('r6', 'Rectangle');
model.geom('geom1').feature('r6').set('size', {'d' 'D'});
model.geom('geom1').feature('r6').set('pos', {'-period*nop/2+d' '0'});
model.geom('geom1').create('arr3', 'Array');
model.geom('geom1').feature('arr3').label('Array 2');
model.geom('geom1').feature('arr3').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr3').set('selresult', 'on');
model.geom('geom1').feature('arr3').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr3').selection('input').set({'r6'});
model.geom('geom1').create('r7', 'Rectangle');
model.geom('geom1').feature('r7').set('size', {'d' 'D'});
model.geom('geom1').feature('r7').set('pos', {'-period*nop/2+2*d' '0'});
model.geom('geom1').create('arr4', 'Array');
model.geom('geom1').feature('arr4').label('Array 3');
model.geom('geom1').feature('arr4').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr4').set('selresult', 'on');
model.geom('geom1').feature('arr4').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr4').selection('input').set({'r7'});
model.geom('geom1').create('r8', 'Rectangle');
model.geom('geom1').feature('r8').set('size', {'d' 'D'});
model.geom('geom1').feature('r8').set('pos', {'-period*nop/2+3*d' '0'});
model.geom('geom1').create('arr5', 'Array');
model.geom('geom1').feature('arr5').label('Array 4');
model.geom('geom1').feature('arr5').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr5').set('selresult', 'on');
model.geom('geom1').feature('arr5').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr5').selection('input').set({'r8'});
model.geom('geom1').create('r9', 'Rectangle');
model.geom('geom1').feature('r9').set('size', {'d' 'D'});
model.geom('geom1').feature('r9').set('pos', {'-period*nop/2+4*d' '0'});
model.geom('geom1').create('arr6', 'Array');
model.geom('geom1').feature('arr6').label('Array 5');
model.geom('geom1').feature('arr6').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr6').set('selresult', 'on');
model.geom('geom1').feature('arr6').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr6').selection('input').set({'r9'});
model.geom('geom1').create('r10', 'Rectangle');
model.geom('geom1').feature('r10').set('size', {'d' 'D'});
model.geom('geom1').feature('r10').set('pos', {'-period*nop/2+5*d' '0'});
model.geom('geom1').create('arr7', 'Array');
model.geom('geom1').feature('arr7').label('Array 6');
model.geom('geom1').feature('arr7').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr7').set('selresult', 'on');
model.geom('geom1').feature('arr7').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr7').selection('input').set({'r10'});
model.geom('geom1').create('r11', 'Rectangle');
model.geom('geom1').feature('r11').set('size', {'d' 'D'});
model.geom('geom1').feature('r11').set('pos', {'-period*nop/2+6*d' '0'});
model.geom('geom1').create('arr8', 'Array');
model.geom('geom1').feature('arr8').label('Array 7');
model.geom('geom1').feature('arr8').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr8').set('selresult', 'on');
model.geom('geom1').feature('arr8').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr8').selection('input').set({'r11'});
model.geom('geom1').create('r12', 'Rectangle');
model.geom('geom1').feature('r12').set('size', {'d' 'D'});
model.geom('geom1').feature('r12').set('pos', {'-period*nop/2+7*d' '0'});
model.geom('geom1').create('arr9', 'Array');
model.geom('geom1').feature('arr9').label('Array 8');
model.geom('geom1').feature('arr9').set('displ', {'ninperiod*d' '0'});
model.geom('geom1').feature('arr9').set('selresult', 'on');
model.geom('geom1').feature('arr9').set('size', {'period/ninperiod/d*nop' '1'});
model.geom('geom1').feature('arr9').selection('input').set({'r12'});
model.geom('geom1').create('r5', 'Rectangle');
model.geom('geom1').feature('r5').set('size', {'W' 'PMLH'});
model.geom('geom1').feature('r5').set('base', 'center');
model.geom('geom1').feature('r5').set('pos', {'0' '-0.5*PMLH'});
model.geom('geom1').run;
model.geom('geom1').run('fin');
model.geom('geom2').create('c1', 'Circle');
model.geom('geom2').feature('c1').set('r', 'R');
model.geom('geom2').feature('c1').set('angle', '180');
model.geom('geom2').create('r2', 'Rectangle');
model.geom('geom2').feature('r2').set('size', {'int_W' 'int_H'});
model.geom('geom2').feature('r2').set('pos', {'-int_W/2' '0'});
model.geom('geom2').create('r3', 'Rectangle');
model.geom('geom2').feature('r3').set('size', {'W' 'PMLH'});
model.geom('geom2').feature('r3').set('base', 'center');
model.geom('geom2').feature('r3').set('pos', {'0' '-0.5*PMLH'});
model.geom('geom2').create('r4', 'Rectangle');
model.geom('geom2').feature('r4').set('size', {'period*nop' 'D'});
model.geom('geom2').feature('r4').set('pos', {'-period*nop/2' '0'});
model.geom('geom2').run;

model.selection.create('box1', 'Box');
model.selection('box1').model('comp1');
model.selection('box1').set('entitydim', '1');
model.selection.create('box2', 'Box');
model.selection('box2').model('comp1');
model.selection('box2').set('entitydim', '1');
model.selection.create('uni1', 'Union');
model.selection('uni1').model('comp1');
model.selection('uni1').set('entitydim', '1');
model.selection('box1').set('xmin', '-int_W/2-0.005');
model.selection('box1').set('ymax', 'D-0.01');
model.selection('box1').set('ymin', '0.01');
model.selection('box1').set('xmax', 'int_W/2+0.005');
model.selection('box1').label('vertical boundaries');
model.selection('box2').set('condition', 'inside');
model.selection('box2').set('xmin', '-int_W/2-0.005');
model.selection('box2').set('ymax', '0.01');
model.selection('box2').set('ymin', '-0.01');
model.selection('box2').set('xmax', 'int_W/2+0.005');
model.selection('box2').label('horizontal boundaries');
model.selection('uni1').set('input', {'box1' 'box2'});
model.selection('uni1').label('hard boundaries');

model.variable.create('var2');
model.variable('var2').model('comp1');
model.variable('var2').set('p_with', '1/2*real(-intup1(acpr.p_t*conj(acpr.vy))+intleft1(acpr.p_t*conj(acpr.vx))-intright1(acpr.p_t*conj(acpr.vx)))');
model.variable.create('var3');
model.variable('var3').model('comp2');
model.variable('var3').set('p_without', '1/2*real(-intup2(acpr2.p_t*conj(acpr2.vy))+intleft2(acpr2.p_t*conj(acpr2.vx))-intright2(acpr2.p_t*conj(acpr2.vx)))');

model.view('view2').tag('view3');

model.material.create('mat1', 'Common', 'comp1');
model.material.create('mat4', 'Common', 'comp2');
model.material.create('mat5', 'Common', 'comp2');
model.material.create('mat6', 'Common', 'comp1');
model.material.create('mat7', 'Common', 'comp1');
model.material.create('mat8', 'Common', 'comp1');
model.material.create('mat9', 'Common', 'comp1');
model.material.create('mat10', 'Common', 'comp1');
model.material.create('mat11', 'Common', 'comp1');
model.material.create('mat12', 'Common', 'comp1');
model.material.create('mat13', 'Common', 'comp1');
model.material.create('mat14', 'Common', 'comp1');
model.material('mat1').selection.set([2 4]);
model.material('mat4').selection.set([2 3 4]);
model.material('mat5').selection.set([1]);
model.material('mat6').selection.set([1]);
model.material('mat7').selection.named('geom1_arr2_dom');
model.material('mat8').selection.named('geom1_arr3_dom');
model.material('mat9').selection.named('geom1_arr4_dom');
model.material('mat10').selection.named('geom1_arr5_dom');
model.material('mat11').selection.named('geom1_arr6_dom');
model.material('mat12').selection.named('geom1_arr7_dom');
model.material('mat13').selection.named('geom1_arr8_dom');
model.material('mat14').selection.named('geom1_arr9_dom');

model.cpl.create('intop1', 'Integration', 'geom1');
model.cpl.create('intop2', 'Integration', 'geom2');
model.cpl.create('intop3', 'Integration', 'geom1');
model.cpl.create('intop4', 'Integration', 'geom1');
model.cpl.create('intop5', 'Integration', 'geom2');
model.cpl.create('intop6', 'Integration', 'geom2');
model.cpl('intop1').selection.geom('geom1', 1);
model.cpl('intop1').selection.set([8]);
model.cpl('intop2').selection.geom('geom2', 1);
model.cpl('intop2').selection.set([8]);
model.cpl('intop3').selection.geom('geom1', 1);
model.cpl('intop3').selection.set([4 6]);
model.cpl('intop4').selection.geom('geom1', 1);
model.cpl('intop4').selection.set([488]);
model.cpl('intop5').selection.geom('geom2', 1);
model.cpl('intop5').selection.set([4 6]);
model.cpl('intop6').selection.geom('geom2', 1);
model.cpl('intop6').selection.set([10 12]);

model.coordSystem.create('pml1', 'geom1', 'PML');
model.coordSystem.create('pml2', 'geom2', 'PML');
model.coordSystem('pml1').selection.set([1]);
model.coordSystem('pml2').selection.set([1]);

model.physics.create('acpr', 'PressureAcoustics', 'geom1');
model.physics('acpr').create('pwr1', 'PlaneWaveRadiation', 1);
model.physics('acpr').feature('pwr1').selection.set([490 491]);
model.physics('acpr').feature('pwr1').create('ipf1', 'IncidentPressureField', 1);
model.physics('acpr').feature('pwr1').feature('ipf1').selection.set([7 32 33 54 56 57 78 80 81 102 104 105 126 128 129 150 152 153 174 176 177 198 200 201 222 224 225 246 248 249 270 272 273 294 296 297 309 311 312 314 315 318 320 321 324 326 327 329 330 332 333 335 336 338 339 342 344 345 348 350 351 353 354 356 357 359 360 362 363 366 368 369 372 374 375 377 378 380 381 383 384 386 387 390 392 393 396 398 399 401 402 404 405 407 408 410 411 414 416 417 420 422 423 425 426 428 429 431 432 434 435 438 440 441 444 446 447 449 450 452 453 455 456 458 459 462 464 465 468 470 471 473 474 476 477 479 480 482 483 486 490 491]);
model.physics('acpr').create('ishb1', 'InteriorSoundHard', 1);
model.physics('acpr').feature('ishb1').selection.named('uni1');
model.physics.create('acpr2', 'PressureAcoustics', 'geom2');
model.physics('acpr2').create('pwr1', 'PlaneWaveRadiation', 1);
model.physics('acpr2').feature('pwr1').selection.set([14 15]);
model.physics('acpr2').feature('pwr1').create('ipf1', 'IncidentPressureField', 1);
model.physics('acpr2').feature('pwr1').feature('ipf1').selection.set([14 15]);

model.mesh('mesh3').autoMeshSize(2);
model.mesh('mesh4').autoMeshSize(2);

model.variable('var2').label('With array');
model.variable('var3').label('Without array');

model.view('view1').axis.set('abstractviewxscale', '0.004230647347867489');
model.view('view1').axis.set('ymin', '-0.057676296681165695');
model.view('view1').axis.set('xmax', '0.17007207870483398');
model.view('view1').axis.set('abstractviewyscale', '0.0042306468822062016');
model.view('view1').axis.set('abstractviewbratio', '0.03219030797481537');
model.view('view1').axis.set('abstractviewtratio', '-0.7670245170593262');
model.view('view1').axis.set('abstractviewrratio', '-0.429999977350235');
model.view('view1').axis.set('xmin', '-0.17007207870483398');
model.view('view1').axis.set('abstractviewlratio', '0.429999977350235');
model.view('view1').axis.set('ymax', '0.20631620287895203');
model.view('view3').label('View 3');
model.view('view3').axis.set('abstractviewxscale', '0.007702533155679703');
model.view('view3').axis.set('ymin', '0.8358216285705566');
model.view('view3').axis.set('xmax', '0.5060564875602722');
model.view('view3').axis.set('abstractviewyscale', '0.007702533155679703');
model.view('view3').axis.set('abstractviewbratio', '0.7117596864700317');
model.view('view3').axis.set('abstractviewtratio', '0.07384280860424042');
model.view('view3').axis.set('abstractviewrratio', '-0.2917120158672333');
model.view('view3').axis.set('xmin', '-0.2149006724357605');
model.view('view3').axis.set('abstractviewlratio', '0.4115489423274994');
model.view('view3').axis.set('ymax', '1.3953704833984375');

model.material('mat1').propertyGroup('def').set('density', '1.25*(1-loss_a*i)');
model.material('mat1').propertyGroup('def').set('soundspeed', '343/(1-loss_a*i)');
model.material('mat4').label('Air');
model.material('mat4').propertyGroup('def').set('density', '1.25*(1-loss_a*i)');
model.material('mat4').propertyGroup('def').set('soundspeed', '343/(1-loss_a*i)');
model.material('mat5').label('Perfectly Matched');
model.material('mat5').propertyGroup('def').set('density', '1.25');
model.material('mat5').propertyGroup('def').set('soundspeed', '343');
model.material('mat6').propertyGroup('def').set('density', '1.25');
model.material('mat6').propertyGroup('def').set('soundspeed', '343');
model.material('mat7').label('1');
model.material('mat7').propertyGroup('def').set('density', '1.25*nr(1)*(1-loss*i)');
model.material('mat7').propertyGroup('def').set('soundspeed', '343/nr(1)/sqrt(1-loss*i)');
model.material('mat8').label('2');
model.material('mat8').propertyGroup('def').set('density', '1.25*nr(2)*(1-loss*i)');
model.material('mat8').propertyGroup('def').set('soundspeed', '343/nr(2)/sqrt(1-loss*i)');
model.material('mat9').label('3');
model.material('mat9').propertyGroup('def').set('density', '1.25*nr(3)*(1-loss*i)');
model.material('mat9').propertyGroup('def').set('soundspeed', '343/nr(3)/sqrt(1-loss*i)');
model.material('mat10').label('4');
model.material('mat10').propertyGroup('def').set('density', '1.25*nr(4)*(1-loss*i)');
model.material('mat10').propertyGroup('def').set('soundspeed', '343/nr(4)/sqrt(1-loss*i)');
model.material('mat11').label('5');
model.material('mat11').propertyGroup('def').set('density', '1.25*nr(5)*(1-loss*i)');
model.material('mat11').propertyGroup('def').set('soundspeed', '343/nr(5)/sqrt(1-loss*i)');
model.material('mat12').label('6');
model.material('mat12').propertyGroup('def').set('density', '1.25*nr(6)*(1-loss*i)');
model.material('mat12').propertyGroup('def').set('soundspeed', '343/nr(6)/sqrt(1-loss*i)');
model.material('mat13').label('7');
model.material('mat13').propertyGroup('def').set('density', '1.25*nr(7)*(1-loss*i)');
model.material('mat13').propertyGroup('def').set('soundspeed', '343/nr(7)/sqrt(1-loss*i)');
model.material('mat14').label('8');
model.material('mat14').propertyGroup('def').set('density', '1.25*nr(8)*(1-loss*i)');
model.material('mat14').propertyGroup('def').set('soundspeed', '343/nr(8)/sqrt(1-loss*i)');

model.cpl('intop1').label('Integration up');
model.cpl('intop1').set('opname', 'intup1');
model.cpl('intop2').label('Integration up 2');
model.cpl('intop2').set('opname', 'intup2');
model.cpl('intop3').label('Integration left');
model.cpl('intop3').set('opname', 'intleft1');
model.cpl('intop4').label('Integration right');
model.cpl('intop4').set('opname', 'intright1');
model.cpl('intop5').label('Integration left 2');
model.cpl('intop5').set('opname', 'intleft2');
model.cpl('intop6').label('Integration right 2');
model.cpl('intop6').set('opname', 'intright2');

model.physics('acpr').feature('pwr1').feature('ipf1').set('IncidentPressureFieldType', 'UserDefined');
model.physics('acpr').feature('pwr1').feature('ipf1').set('dir', {'sin(theta_i)'; '-cos(theta_i)'; '0'});
model.physics('acpr').feature('pwr1').feature('ipf1').set('p_i', 'exp(-((x+R*sin(theta_i))^2+(y-R*cos(theta_i))^2)/(sigma^2))*exp(-1i*acpr.k*(sin(theta_i)*x-cos(theta_i)*y))');
model.physics('acpr').feature('pwr1').feature('ipf1').set('pamp', 'exp(-((y-0.4+D/2-(25*0.025685-0.4*tan(theta_i))/tan(theta_i))/0.5)^2)');
model.physics('acpr2').feature('pwr1').feature('ipf1').set('IncidentPressureFieldType', 'UserDefined');
model.physics('acpr2').feature('pwr1').feature('ipf1').set('dir', {'sin(theta_i)'; '-cos(theta_i)'; '0'});
model.physics('acpr2').feature('pwr1').feature('ipf1').set('p_i', 'exp(-((x+R*sin(theta_i))^2+(y-R*cos(theta_i))^2)/(sigma^2))*exp(-1i*acpr2.k*(sin(theta_i)*x-cos(theta_i)*y))');
model.physics('acpr2').feature('pwr1').feature('ipf1').set('pamp', 'exp(-((x+R*sin(theta_i))^2+(y-R*cos(theta_i))^2)/(0.5^2))*exp(-1i*acpr.k*(sin(theta_i)*x-cos(theta_i)*y))');

model.mesh('mesh3').run;
model.mesh('mesh4').run;

model.study.create('std1');
model.study('std1').create('param', 'Parametric');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('param').set('pname', {'freq1'});
model.study('std1').feature('param').set('plistarr', {'400'});
model.study('std1').feature('param').set('punit', {''});
model.study('std1').feature('freq').set('plist', 'freq1');

out = model;
